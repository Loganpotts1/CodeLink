{"version":3,"sources":["components/profile/ProfileItem.jsx","components/layout/Profiles.jsx","actions/profile.js"],"names":["ProfileItem","props","profile","user","_id","name","avatar","status","company","location","skills","className","length","src","alt","to","slice","map","skill","index","key","Profiles","useSelector","state","profiles","loading","dispatch","useDispatch","useEffect","getAllProfiles","Spinner","getCurrentProfile","a","type","CLEAR_PROFILE","api","get","res","GET_PROFILE","payload","data","PROFILE_ERROR","msg","response","statusText","getProfileById","userId","GET_PROFILES","createProfile","formData","edit","post","setAlert","errors","forEach","error","addEducation","put","UPDATE_PROFILE","addExperience","deleteEducation","id","delete","deleteExperience","getGithub","username","GET_REPOS"],"mappings":"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","file":"static/js/11.712567b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function ProfileItem(props) {\r\n    const {\r\n        profile: {\r\n            user: {\r\n                _id,\r\n                name\r\n            },\r\n            avatar,\r\n            status,\r\n            company,\r\n            location,\r\n            skills\r\n        }\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <section className=\"card\">\r\n\r\n\r\n            <figure className=\"card__avatar\">\r\n                {\r\n                    avatar.length > 0 ?\r\n                    <img src={avatar} alt=\"avatar\"/> :\r\n                    <i className=\"fas fa-user-ninja\"/>\r\n                }\r\n            </figure>\r\n\r\n\r\n            <div className=\"card__content\">\r\n\r\n                <h2 className=\"card__name\">\r\n                    {name}\r\n                </h2>\r\n\r\n                <Link to={`/profile/${_id}`} className=\"btn btn--tertiary card__button\">\r\n                    View Profile\r\n                </Link>\r\n\r\n                <aside className=\"card__details\">\r\n                    <small className=\"card__company\">\r\n                        {status} {company && <span> at {company}</span>}\r\n                    </small>\r\n\r\n                    <small  className=\"card__location\">\r\n                        {location && <span>{location}</span>}\r\n                    </small>\r\n                </aside>\r\n\r\n                <ul className=\"card__skills\">\r\n                    {skills.slice(0,4).map((skill, index) => (\r\n                        <li key={index}>\r\n                            {/* <i className=\"fas fa-check\"></i> */}\r\n                            {\" \" + skill}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                \r\n            </div>\r\n\r\n        </section>\r\n    );\r\n}","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//  LOCAL\r\nimport { getAllProfiles } from \"../../actions/profile\";\r\nimport Spinner from \"../utils/Spinner\";\r\nimport ProfileItem from \"../profile/ProfileItem\";\r\n\r\n\r\nexport default function Profiles() {\r\n    const {\r\n        profile: {\r\n            profiles,\r\n            loading\r\n        }\r\n    } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllProfiles());\r\n        // eslint-disable-next-line\r\n    },[]);\r\n\r\n\r\n    return loading ?\r\n        <Spinner/> :\r\n        <main className=\"profiles\">\r\n\r\n            <h1 className=\"profiles__heading\">\r\n                Developers\r\n            </h1>\r\n\r\n            <div className=\"profiles__container\">\r\n                {\r\n                    profiles.map(profile => (\r\n                        <ProfileItem key={profile._id} profile={profile} />\r\n                    )) \r\n                }\r\n            </div>\r\n\r\n        </main>;\r\n}","import api from \"../utils/api\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    UPDATE_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    GET_REPOS\r\n} from \"./types\";\r\n\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n\r\n    try {\r\n        dispatch({ type: CLEAR_PROFILE });\r\n        \r\n        const res = await api.get(\"/profile/me\");\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getProfileById = (userId) => async dispatch => {\r\n\r\n    try {\r\n        dispatch({ type: CLEAR_PROFILE });\r\n\r\n        const res = await api.get(`/profile/users/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getAllProfiles = () => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.get(\"/profile\");\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const createProfile = (formData, edit = false) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.post(\"/profile\", formData);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\r\n            edit ? \"Profile Edited\" : \"Profile Created\",\r\n            \"success\"\r\n        ));\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n        );\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addEducation = (formData) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.put(\"/profile/education\", formData);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n        );\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addExperience = (formData) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.put(\"/profile/experience\", formData);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Experience Added\", \"success\"));\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n        );\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const deleteEducation = (id) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.delete(`/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Education Deleted\", \"danger\"));\r\n\r\n    } catch (err) { \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const deleteExperience = (id) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.delete(`/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Experience Deleted\", \"danger\"));\r\n\r\n    } catch (err) { \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getGithub = (username) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.get(`/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};"],"sourceRoot":""}