{"version":3,"sources":["components/profile/Experience.jsx","components/profile/Education.jsx","components/layout/Dashboard.jsx","actions/profile.js","utils/formatDate.js"],"names":["Experience","props","experience","id","useSelector","state","auth","loading","userId","user","_id","dispatch","useDispatch","experiences","map","exp","key","className","company","title","formatDate","from","to","onClick","deleteExperience","length","Education","education","educations","edu","school","degree","deleteEducation","Dashboard","profile","useEffect","getCurrentProfile","name","trim","split","a","type","CLEAR_PROFILE","api","get","res","GET_PROFILE","payload","data","PROFILE_ERROR","msg","response","statusText","status","getProfileById","getAllProfiles","GET_PROFILES","createProfile","formData","edit","post","setAlert","errors","forEach","error","addEducation","put","UPDATE_PROFILE","addExperience","delete","getGithub","username","GET_REPOS","date","day","intl","Intl","DateTimeFormat","month","format","Date"],"mappings":"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","file":"static/js/7.3b69f1e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n//  LOCAL\r\nimport formatDate from \"../../utils/formatDate\";\r\nimport { deleteExperience } from \"../../actions/profile\";\r\n\r\n\r\nexport default function Experience(props) {\r\n    const { experience, id } = props;\r\n    const {\r\n        loading,\r\n        user: {\r\n            _id: userId\r\n        }\r\n    } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const experiences = experience.map(exp => (\r\n        <tr key={exp._id}>\r\n\r\n            <td className=\"hide--sm\">\r\n                {exp.company}\r\n            </td>\r\n\r\n            <td>\r\n                {exp.title}\r\n            </td>\r\n\r\n            <td> \r\n                { formatDate(exp.from) + \" - \" + (exp.to ? formatDate(exp.to) : \"Current\") }\r\n            </td>\r\n\r\n            {\r\n                !loading && id === userId &&\r\n                <td className=\"table__delete-item\">\r\n                    <button className=\"btn btn--tertiary\" onClick={() => dispatch(deleteExperience(exp._id))}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                </td>\r\n            }\r\n\r\n        </tr>\r\n    ));\r\n\r\n\r\n    return (\r\n        <section className=\"table\">\r\n\r\n\r\n            <header className=\"table__header\">\r\n                \r\n                <h2>\r\n                    Experience\r\n                </h2>\r\n\r\n                {\r\n                    !loading && id === userId &&\r\n                    <Link to=\"/add-experience\" className=\"btn btn--tertiary\">\r\n                        <i className=\"fas fa-plus\"/>\r\n                    </Link>\r\n                }\r\n                \r\n            </header>\r\n            \r\n\r\n            {\r\n                experience.length > 0 &&\r\n                <table className=\"table__content\">\r\n\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"hide--sm\">\r\n                                Company\r\n                            </th>\r\n                            <th>\r\n                                Title\r\n                            </th>\r\n                            <th>\r\n                                Years\r\n                            </th>\r\n                            {\r\n                                !loading && id === userId &&\r\n                                <th>\r\n                                    {/* Column for Delete Buttons */}\r\n                                </th>\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {experiences}\r\n                    </tbody>\r\n\r\n                </table>\r\n            }\r\n            \r\n\r\n        </section>\r\n    );\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n//  LOCAL\r\nimport { deleteEducation } from \"../../actions/profile\";\r\nimport formatDate from \"../../utils/formatDate\";\r\n\r\n\r\nexport default function Education(props) {\r\n    const { education, id } = props;\r\n    const {\r\n        loading,\r\n        user: {\r\n            _id: userId\r\n        }\r\n    } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const educations = education.map(edu => (\r\n        <tr key={edu._id}>\r\n            \r\n            <td className=\"hide--sm\">\r\n                {edu.school}\r\n            </td>\r\n\r\n            <td>\r\n                {edu.degree}\r\n            </td>\r\n\r\n            <td>\r\n                { formatDate(edu.from) + \" - \" + (edu.to ? formatDate(edu.to) : \"Current\") }\r\n            </td>\r\n\r\n            {\r\n                !loading && id === userId &&\r\n                <td className=\"table__delete-item\">\r\n                    <button className=\"btn btn--tertiary\" onClick={() => dispatch(deleteEducation(edu._id))}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                </td>\r\n            }\r\n\r\n        </tr>\r\n    ));\r\n\r\n\r\n    return (\r\n        <section className=\"table\">\r\n\r\n\r\n            <header className=\"table__header\">\r\n                \r\n                <h2>\r\n                    Education\r\n                </h2>\r\n\r\n                {\r\n                    !loading && id === userId &&\r\n                    <Link to=\"/add-education\" className=\"btn btn--tertiary\">\r\n                        <i className=\"fas fa-plus\"/>\r\n                    </Link>\r\n                }\r\n\r\n            </header>\r\n\r\n\r\n            {\r\n                education.length > 0 &&\r\n                <table className=\"table__content\">\r\n\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"hide--sm\">\r\n                                School\r\n                            </th>\r\n                            <th>\r\n                                Degree\r\n                            </th>\r\n                            <th>\r\n                                Years\r\n                            </th>\r\n                            {\r\n                                !loading && id === userId &&\r\n                                <th>\r\n                                    {/* Column for Delete Buttons */}\r\n                                </th>\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {educations}\r\n                    </tbody>\r\n                    \r\n                </table>\r\n            }\r\n            \r\n\r\n        </section>\r\n    );\r\n}","import React, { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n//  LOCAL\r\nimport { getCurrentProfile } from \"../../actions/profile\";\r\nimport { deleteAccount } from \"../../actions/auth\";\r\nimport Experience from \"../profile/Experience\";\r\nimport Education from \"../profile/Education\";\r\n\r\n\r\nexport default function Dashboard() {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        auth: {\r\n            user\r\n        },\r\n        profile: {\r\n            profile,\r\n            loading\r\n        }\r\n    } = useSelector(state => state);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrentProfile());\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n        <main className=\"dashboard\">\r\n\r\n\r\n            <header className=\"dashboard__header\">\r\n                <h1 className=\"dashboard__heading\">\r\n                    Dashboard\r\n                </h1>\r\n                <h3>\r\n                    {`Welcome ${profile ? \"back, \" : \"\"} ${user && user.name.trim().split(\" \")[0]}!`}\r\n                </h3>\r\n            </header>\r\n            \r\n\r\n            {\r\n                profile && !loading ? \r\n                \r\n                <Fragment>\r\n\r\n                    <Experience experience={profile.experience} id={user._id} />\r\n\r\n                    <Education education={profile.education} id={user._id} />\r\n\r\n                    <div className=\"dashboard__actions\">\r\n                        <Link className=\"btn btn--secondary\" to=\"/edit-profile\">\r\n                            Edit Profile\r\n                        </Link>\r\n                    </div>\r\n\r\n                </Fragment> :\r\n                \r\n                <section className=\"dashboard--new\">\r\n\r\n                    <h2>\r\n                        Why not set up a profile?\r\n                    </h2>\r\n\r\n                    <Link className=\"btn btn--primary\" to=\"/edit-profile\">\r\n                        Create Profile\r\n                    </Link>\r\n\r\n                </section>\r\n                \r\n            }\r\n\r\n\r\n        </main>\r\n    );\r\n}","import api from \"../utils/api\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    UPDATE_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    GET_REPOS\r\n} from \"./types\";\r\n\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n\r\n    try {\r\n        dispatch({ type: CLEAR_PROFILE });\r\n        \r\n        const res = await api.get(\"/profile/me\");\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getProfileById = (userId) => async dispatch => {\r\n\r\n    try {\r\n        dispatch({ type: CLEAR_PROFILE });\r\n\r\n        const res = await api.get(`/profile/users/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getAllProfiles = () => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.get(\"/profile\");\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const createProfile = (formData, edit = false) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.post(\"/profile\", formData);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\r\n            edit ? \"Profile Edited\" : \"Profile Created\",\r\n            \"success\"\r\n        ));\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n        );\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addEducation = (formData) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.put(\"/profile/education\", formData);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n        );\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addExperience = (formData) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.put(\"/profile/experience\", formData);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Experience Added\", \"success\"));\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n        );\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const deleteEducation = (id) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.delete(`/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Education Deleted\", \"danger\"));\r\n\r\n    } catch (err) { \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const deleteExperience = (id) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.delete(`/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Experience Deleted\", \"danger\"));\r\n\r\n    } catch (err) { \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getGithub = (username) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.get(`/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};","export default function formatDate(date, day = false) {\r\n    const intl = Intl.DateTimeFormat(\"en\",\r\n        {\r\n            month: \"long\",\r\n            [day && \"day\"]: \"numeric\",\r\n            year: \"numeric\"\r\n        }\r\n    );\r\n\r\n    return intl.format(new Date(date));\r\n}"],"sourceRoot":""}