{"version":3,"sources":["actions/types.js","utils/api.js","actions/alert.js","utils/setAuthToken.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/utils/Spinner.jsx","actions/auth.js","img/spinner.gif","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","GET_REPOS","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","DELETE_COMMENT","api","axios","create","baseURL","headers","interceptors","response","use","res","err","status","store","dispatch","type","window","location","Promise","reject","setAlert","msg","alertType","timeout","id","uuidv4","payload","setTimeout","setAuthToken","token","common","defaults","localStorage","setItem","removeItem","initialState","getItem","isAuthenticated","loading","user","profile","profiles","repos","error","posts","post","combineReducers","alerts","state","action","filter","alert","auth","map","_id","postId","likes","comments","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","prevStoreToken","currStoreToken","Spinner","src","spinner","style","width","margin","display","alt","register","formData","a","data","loadUser","errors","forEach","login","put","get","logout","deleteAccount","confirm","delete","module","exports","Landing","lazy","Alert","Routes","App","useDispatch","useEffect","addEventListener","className","fallback","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74883546.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const NO_REPOS = 'NO_REPOS';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';","import axios from 'axios';\r\nimport store from '../store';\r\nimport { LOGOUT } from '../actions/types';\r\n\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://devconnector-3.herokuapp.com/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n**/\r\nconst { response } = api.interceptors;\r\n\r\nresponse.use(\r\n  res => res,\r\n  err => {\r\n    if (err.response.status === 401) {\r\n      store.dispatch({ type: LOGOUT });\r\n    } else if (err.response.status === 404) {\r\n      return window.location = \"/\";\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n\r\n    const id = uuidv4();\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    });\r\n\r\n    setTimeout(() => dispatch({ \r\n        type: REMOVE_ALERT, \r\n        payload: id \r\n    }), timeout);\r\n};","import api from \"./api\";\r\n\r\n\r\nexport default function setAuthToken(token) {\r\n    const { common } = api.defaults.headers;\r\n\r\n    if (token) {\r\n\r\n        common[\"x-auth-token\"] = token;\r\n\r\n        localStorage.setItem(\"token\", token);\r\n\r\n    } else {\r\n        \r\n        delete common[\"x-auth-token\"];\r\n\r\n        localStorage.removeItem(\"token\");\r\n\r\n    }\r\n}","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\n\r\nconst initialState = [];\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    LOGIN_SUCCESS,\r\n    USER_LOADED, \r\n    LOGOUT,\r\n    AUTH_ERROR,\r\n    ACCOUNT_DELETED\r\n} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: false,\r\n    loading: true,\r\n    user: null\r\n};\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n\r\n    switch(type) {\r\n\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n\r\n        case LOGOUT:\r\n        case AUTH_ERROR:\r\n        case ACCOUNT_DELETED:\r\n            return {\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: null\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    PROFILE_ERROR,\r\n    GET_REPOS\r\n} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                loading: false,\r\n                error: payload\r\n\r\n            };\r\n\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            };\r\n\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import {\r\n    ADD_COMMENT,\r\n    ADD_POST,\r\n    DELETE_COMMENT,\r\n    DELETE_POST,\r\n    GET_POST,\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES\r\n} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false\r\n            };\r\n\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => {\r\n                    if (post._id === payload.postId) {\r\n                        post.likes = payload.likes;\r\n                    }\r\n                    return post;\r\n                }),\r\n                loading: false\r\n            };\r\n\r\n        case ADD_COMMENT:\r\n        case DELETE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: payload\r\n                },\r\n                loading: false\r\n            };\r\n\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            };\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            }\r\n\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport alerts from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport post from \"./post\";\r\n\r\n\r\nexport default combineReducers({\r\n    alerts,\r\n    auth,\r\n    profile,\r\n    post\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nlet currentState = store.getState();//  This gets the state of the store as soon as it is created\r\n\r\n\r\n//  Set listener to store, and update the auth token when necessary\r\nstore.subscribe(() => {\r\n    const previousState = currentState;\r\n    const prevStoreToken = previousState.auth.token;\r\n\r\n    currentState = store.getState();\r\n    const currStoreToken = currentState.auth.token;\r\n\r\n\r\n    if (currStoreToken !== prevStoreToken)\r\n    setAuthToken(currStoreToken);\r\n});\r\n\r\n\r\nexport default store;","import React from \"react\";\r\n//  LOCAL\r\nimport spinner from \"../../img/spinner.gif\";\r\n\r\n\r\nexport default function Spinner() {\r\n\r\n    \r\n    return (\r\n        <img \r\n            src={spinner}\r\n            style={{ width:\"200px\", margin:\"auto\", display: \"block\" }}\r\n            alt=\"Loading...\"\r\n        />\r\n    );\r\n}","import api from \"../utils/api\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n    REGISTER_SUCCESS,\r\n\tREGISTER_FAIL,\r\n\tUSER_LOADED,\r\n\tAUTH_ERROR,\r\n\tLOGIN_SUCCESS,\r\n\tLOGIN_FAIL,\r\n\tLOGOUT,\r\n\tCLEAR_PROFILE,\r\n\tACCOUNT_DELETED\r\n} from \"./types\";\r\n\r\n\r\nexport const register = formData => async dispatch => {\r\n\r\n    try {\r\n\t\tconst res = await api.post(\"/users\", formData);\r\n\t\r\n\t\tdispatch({\r\n\t\t\ttype: REGISTER_SUCCESS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\r\n\t\tdispatch(loadUser());\r\n\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n\t\t);\r\n\t\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: REGISTER_FAIL\r\n\t\t});\r\n    }\r\n};\r\n\r\n\r\nexport const login = formData => async dispatch => {\r\n\r\n\ttry {\r\n\t\tconst res = await api.put(\"/auth\", formData);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\r\n\t\tdispatch(loadUser());\r\n\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n\t\t);\r\n\t\t\r\n\t\t\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_FAIL,\r\n\t\t})\r\n\t}\r\n};\r\n\r\n\r\nexport const loadUser = () => async dispatch => {\r\n\r\n\ttry {\r\n\t\tconst res = await api.get(\"/auth\");\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOADED,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_ERROR\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n\tdispatch({ type: CLEAR_PROFILE });\r\n\tdispatch({ type: LOGOUT });\r\n};\r\n\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n\r\n\tif (window.confirm(\"Are you sure? This can't be undone.\")) {\r\n\t\ttry {\r\n\t\t\tawait api.delete(\"/users\");\r\n\t\r\n\t\t\tdispatch({ type: CLEAR_PROFILE });\r\n\t\t\tdispatch({ type: ACCOUNT_DELETED });\r\n\r\n\t\t\tdispatch(setAlert(\"Your account and profile have been deleted\", \"danger\"));\r\n\t\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_ERROR\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};","module.exports = __webpack_public_path__ + \"static/media/spinner.8a0896ae.gif\";","import React, { useEffect, lazy, Suspense } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n//\tLOCAL\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { loadUser } from \"./actions/auth\";\nimport { LOGOUT } from \"./actions/types\";\nimport Spinner from \"./components/utils/Spinner\";\nimport \"./scss/main.min.css\";\n\nconst Landing = lazy(() => import(\"./components/layout/Landing\"));\nconst Alert = lazy(() => import(\"./components/utils/Alert\"));\nconst Routes = lazy(() => import(\"./components/navigation/Routes\"));\n\n\nexport default function App() {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\t\n\t\t//\tCheck for localStorage Token, and load user\n\t\tif (localStorage.token) {\n\n\t\t\tsetAuthToken(localStorage.token);\n\n\t\t\tdispatch(loadUser());\n\t\t}\n\t\t\n\n\n\t\t//\tIf user logs out on one tab, log them out on all tabs\n\t\twindow.addEventListener(\"storage\", () => {\n\t\t\tif (!localStorage.token)\n\t\t\tdispatch({ type: LOGOUT });\n\t\t});\n\n\t}, [dispatch]);\n\n\n  return (\n\t<Router>\n\t\t<div className=\"page\">\n\t\t\t<Suspense fallback={Spinner}>\n\t\t\t\t<Alert />\n\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Landing} />\n\t\t\t\t\t<Route component={Routes} />\n\t\t\t\t</Switch>\n\t\t\t</Suspense>\n\t\t</div>\n\t</Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n//  LOCAL\nimport App from './App';\nimport store from \"./store\";\nimport \"normalize.css\";\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}