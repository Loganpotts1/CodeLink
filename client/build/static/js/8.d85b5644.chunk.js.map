{"version":3,"sources":["components/forms/EducationForm.jsx","actions/profile.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["AddEducation","props","dispatch","useDispatch","useState","school","degree","fieldofstudy","from","to","current","description","formData","setFormData","onChange","event","target","name","value","className","onClick","window","history","back","onSubmit","preventDefault","addEducation","type","placeholder","required","checked","disabled","cols","rows","getCurrentProfile","a","CLEAR_PROFILE","api","get","res","GET_PROFILE","payload","data","PROFILE_ERROR","msg","response","statusText","status","getProfileById","userId","getAllProfiles","GET_PROFILES","createProfile","edit","post","setAlert","errors","forEach","error","put","UPDATE_PROFILE","addExperience","deleteEducation","id","delete","deleteExperience","getGithub","username","GET_REPOS","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/8.d85b5644.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n//  LOCAL\r\nimport { addEducation } from \"../../actions/profile\";\r\n\r\n\r\nexport default function AddEducation(props) {\r\n    const dispatch = useDispatch();\r\n    const initialState = {\r\n        school: \"\",\r\n        degree: \"\",\r\n        fieldofstudy: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n        current: false,\r\n        description: \"\"\r\n    };\r\n    const [ formData, setFormData ] = useState(initialState);\r\n    const {\r\n        school,\r\n        degree,\r\n        fieldofstudy,\r\n        from,\r\n        to,\r\n        current,\r\n        description\r\n    } = formData;\r\n\r\n\r\n    const onChange = event => {\r\n        setFormData({ ...formData, [event.target.name] : event.target.value });\r\n    }\r\n\r\n    \r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(addEducation(formData));\r\n        window.history.back();\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"edit\">\r\n\r\n\r\n            <button className=\"btn btn--return\" onClick={() => {window.history.back()}}>\r\n                <i className=\"fas fa-arrow-left\"/>\r\n            </button>\r\n\r\n\r\n            <h1 className=\"edit__heading\">\r\n                Add Your Education\r\n            </h1>\r\n\r\n\r\n            <small>\r\n                * = required field\r\n            </small>\r\n\r\n\r\n            <form className=\"form\" onSubmit={onSubmit}>\r\n\r\n                <div className=\"form__group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* School or Bootcamp\"\r\n                        name=\"school\"\r\n                        value={school}\r\n                        onChange={onChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Degree or Certificate\"\r\n                        name=\"degree\"\r\n                        value={degree}\r\n                        onChange={onChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Field of Study\"\r\n                        name=\"fieldofstudy\"\r\n                        value={fieldofstudy}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <h4>\r\n                        From Date:\r\n                    </h4>\r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"from\" \r\n                        value={from} \r\n                        onChange={onChange} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                        <div className=\"checkbox\">\r\n                            <input\r\n                                className=\"checkbox__input\"\r\n                                type=\"checkbox\"\r\n                                name=\"current\"\r\n                                checked={current}\r\n                                value={current}\r\n                                onChange={() => setFormData({ ...formData, current: !current })}\r\n                            />\r\n                            <span className=\"checkbox__check\">\r\n                                <i className=\"fas fa-check\"/>\r\n                            </span>\r\n                        </div>\r\n                        <p className=\"checkbox__label\">\r\n                            Current School\r\n                        </p>\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <h4>\r\n                        To Date:\r\n                    </h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"to\"\r\n                        value={to}\r\n                        onChange={onChange}\r\n                        disabled={current}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Program Description\"\r\n                        value={description}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__submit form__submit--right\">\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn--primary\" />\r\n                </div>\r\n\r\n            </form>\r\n\r\n\r\n        </section>\r\n    );\r\n}","import api from \"../utils/api\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    UPDATE_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    GET_REPOS\r\n} from \"./types\";\r\n\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n\r\n    try {\r\n        dispatch({ type: CLEAR_PROFILE });\r\n        \r\n        const res = await api.get(\"/profile/me\");\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getProfileById = (userId) => async dispatch => {\r\n\r\n    try {\r\n        dispatch({ type: CLEAR_PROFILE });\r\n\r\n        const res = await api.get(`/profile/users/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getAllProfiles = () => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.get(\"/profile\");\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const createProfile = (formData, edit = false) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.post(\"/profile\", formData);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\r\n            edit ? \"Profile Edited\" : \"Profile Created\",\r\n            \"success\"\r\n        ));\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n        );\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addEducation = (formData) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.put(\"/profile/education\", formData);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n        );\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addExperience = (formData) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.put(\"/profile/experience\", formData);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Experience Added\", \"success\"));\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n\t\terrors &&\r\n\t\terrors.forEach(error => \r\n\t\t\tdispatch(setAlert(error.msg, \"danger\"))\r\n        );\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const deleteEducation = (id) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.delete(`/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Education Deleted\", \"danger\"));\r\n\r\n    } catch (err) { \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const deleteExperience = (id) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.delete(`/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Experience Deleted\", \"danger\"));\r\n\r\n    } catch (err) { \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getGithub = (username) => async dispatch => {\r\n\r\n    try {\r\n        const res = await api.get(`/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}